(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{311:function(t,v,_){"use strict";_.r(v);var a=_(14),r=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"随机性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#随机性"}},[t._v("#")]),t._v(" 随机性")]),t._v(" "),v("h2",{attrs:{id:"说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),v("p",[t._v("随机性模块里包含随机生成数据的一些方法，有时前端需要生成一个单一的随机值作为某些标识，有时也需要一些随机值来充当静态数据进行开发调试等，\n此模块导出模块名为"),v("code",[t._v("random")])]),t._v(" "),v("ul",[v("li",[t._v("导入模块")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" random "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gx-instant'")]),t._v("\n")])])]),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),v("h3",{attrs:{id:"getrandomstr"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getrandomstr"}},[t._v("#")]),t._v(" getRandomStr")]),t._v(" "),v("p",[t._v("说明：生成随机字符串")]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("length：number")]),t._v(" 字符串的长度")]),t._v(" "),v("li",[v("code",[t._v("count：number")]),t._v(" 生成数量，可选，默认为1")])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("string | Array<string>")]),t._v(" 生成的随机字符串，如果count大于1，则返回数组")])]),t._v(" "),v("h3",{attrs:{id:"getrandomfloat"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getrandomfloat"}},[t._v("#")]),t._v(" getRandomFloat")]),t._v(" "),v("p",[t._v("说明：生成随机浮点数")]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("range：Array<number>")]),t._v(" 第一个元素指定最小值，第二个元素指定最大值，默认[0,10]")]),t._v(" "),v("li",[v("code",[t._v("precision：number")]),t._v(" 精度，可选，默认为2")]),t._v(" "),v("li",[v("code",[t._v("count：number")]),t._v(" 生成数量，可选，默认为1")])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("number | Array<number>")]),t._v(" 生成随机浮点数，如果count大于1，则返回数组")])]),t._v(" "),v("h3",{attrs:{id:"getrandomint"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getrandomint"}},[t._v("#")]),t._v(" getRandomInt")]),t._v(" "),v("p",[t._v("说明：生成随机浮点数")]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("range：Array<number>")]),t._v(" 第一个元素指定最小值，第二个元素指定最大值，默认[0,10]")]),t._v(" "),v("li",[v("code",[t._v("count：number")]),t._v(" 生成数量，可选，默认为1")])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("number | Array<number>")]),t._v(" 生成随机整数，如果count大于1，则返回数组")])]),t._v(" "),v("h3",{attrs:{id:"getuuid"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getuuid"}},[t._v("#")]),t._v(" getUUID")]),t._v(" "),v("p",[t._v("说明：获取UUID格式的唯一字符串")]),t._v(" "),v("p",[v("code",[t._v("版本：1.1.1")])]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("spirit：string")]),t._v(' 各部分连接符，可选，默认"-"')])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("string")]),t._v(" UUID格式字符串，长度32位")])]),t._v(" "),v("h3",{attrs:{id:"getuustr"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getuustr"}},[t._v("#")]),t._v(" getUUStr")]),t._v(" "),v("p",[t._v("说明：获取一个指定长度的唯一字符串")]),t._v(" "),v("p",[v("code",[t._v("版本：1.1.1")])]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("len：number")]),t._v(" 字符串的长度，可选，默认16，因过短影响唯一性，所以不能小于10")])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("string")]),t._v(" 指定长度的字符串")])]),t._v(" "),v("h3",{attrs:{id:"getmoid"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getmoid"}},[t._v("#")]),t._v(" getMOID")]),t._v(" "),v("p",[t._v("说明：获取mongodb的ObjectId格式的唯一字符串")]),t._v(" "),v("p",[v("code",[t._v("版本：1.1.1")])]),t._v(" "),v("ul",[v("li",[t._v("返回："),v("code",[t._v("string")]),t._v(" "),v("code",[t._v("mongodb")]),t._v("的ObjectId格式字符串，长度24位")])]),t._v(" "),v("h3",{attrs:{id:"getrandomname"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getrandomname"}},[t._v("#")]),t._v(" getRandomName")]),t._v(" "),v("p",[t._v("说明：生成随机人名")]),t._v(" "),v("ul",[v("li",[t._v("参数\n"),v("ul",[v("li",[v("code",[t._v("count：number")]),t._v(" 生成数量，可选，默认为1")]),t._v(" "),v("li",[v("code",[t._v("type：string")]),t._v(" 生成类型，可选，默认为zn，可选值：zn-中文名，en-英文名")])])]),t._v(" "),v("li",[t._v("返回："),v("code",[t._v("string | Array<string>")]),t._v(" 生成随机人名，如果count大于1，则返回数组")])]),t._v(" "),v("p",[t._v("提示：姓和名均为有限集合，产生的随机结果为姓+名的组合结果")])])}),[],!1,null,null,null);v.default=r.exports}}]);