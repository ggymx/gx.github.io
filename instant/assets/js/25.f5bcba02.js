(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{313:function(t,s,a){"use strict";a.r(s);var e=a(14),v=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换"}},[t._v("#")]),t._v(" 转换")]),t._v(" "),s("h2",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),s("p",[t._v("转换包含了一些常用的转换方法，导出模块名为"),s("code",[t._v("covert")])]),t._v(" "),s("ul",[s("li",[t._v("导入模块")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" covert "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gx-instant'")]),t._v("\n")])])]),s("h2",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("h3",{attrs:{id:"todatestr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#todatestr"}},[t._v("#")]),t._v(" toDateStr")]),t._v(" "),s("p",[t._v("说明：日期格式化")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("date: Date | string(日期字符串) | number(时间戳)")]),t._v(" 不输入则默认当前时间")]),t._v(" "),s("li",[s("code",[t._v("split：string")]),t._v(" 分隔符，默认为'-'")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("string | false")]),t._v(" 成功返回日期格式化字符串，失败时返回false")])]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toDateStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回当前日期格式化字符串")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toDateStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回2019-01-01")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toDateStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回false")]),t._v("\n")])])]),s("h3",{attrs:{id:"totimestr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#totimestr"}},[t._v("#")]),t._v(" toTimeStr")]),t._v(" "),s("p",[t._v("说明：时间格式化")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("time: Date | string(日期字符串) | number(时间戳)")]),t._v(" 不输入则默认当前时间")]),t._v(" "),s("li",[s("code",[t._v("split：string")]),t._v(" 分隔符，默认为'-'")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("{string | false}")]),t._v(" 成功返回时间格式化字符串，失败时返回false")])]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toTimeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回当前日期格式化字符串")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toTimeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回false")]),t._v("\n")])])]),s("h3",{attrs:{id:"totimestamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#totimestamp"}},[t._v("#")]),t._v(" toTimestamp")]),t._v(" "),s("p",[t._v("说明：日期转时间戳")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val: Date | string(日期字符串) | number(时间戳)")]),t._v(" 不输入则默认当前时间")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("number | false")]),t._v(" 成功返回时间戳，失败时返回false")])]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toTimeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-10-12'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回当前日期时间戳")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toTimeStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回false")]),t._v("\n")])])]),s("h3",{attrs:{id:"jsontoqs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsontoqs"}},[t._v("#")]),t._v(" jsonToQs")]),t._v(" "),s("p",[t._v("说明：json对象转queryString")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("json: Object")]),t._v(" json对象/js对象")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("string")]),t._v(" key/value形式的结果")])]),t._v(" "),s("h3",{attrs:{id:"qstojson"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qstojson"}},[t._v("#")]),t._v(" qsToJson")]),t._v(" "),s("p",[t._v("说明：queryString转json对象")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("qs: string")]),t._v(" queryString类型的字符串")]),t._v(" "),s("li",[s("code",[t._v("objTranslate: boolean")]),t._v(" 可选，规定queryString里的序列化对象是否需要转换反序列化，默认为false")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Object")]),t._v(" 返回json对象")])]),t._v(" "),s("h3",{attrs:{id:"jsontoform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsontoform"}},[t._v("#")]),t._v(" jsonToForm")]),t._v(" "),s("p",[t._v("说明：json对象转FormData")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("json: Object")]),t._v(" son对象/js对象")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("FormData")]),t._v(" 结果")])]),t._v(" "),s("h3",{attrs:{id:"serialize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serialize"}},[t._v("#")]),t._v(" serialize")]),t._v(" "),s("p",[t._v("说明：序列化数据")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val: any")]),t._v(" 要序列化的数据，基本数据类型数据会原值返回")]),t._v(" "),s("li",[s("code",[t._v("strategy：string")]),t._v(" 序列化策略，可选，默认simple（目前仅支持simple）,simple策略采用JSON.stringify进行序列化（特殊类型会丢失精度）")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("string | any")]),t._v(" 序列化后的数据或者数据原值")])]),t._v(" "),s("h3",{attrs:{id:"deserialize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deserialize"}},[t._v("#")]),t._v(" deserialize")]),t._v(" "),s("p",[t._v("说明：反序列化数据")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val: any")]),t._v("  要反序列化的数据，基本数据类型数据会原值返回")]),t._v(" "),s("li",[s("code",[t._v("strategy：string")]),t._v(" 反序列化策略，可选，默认simple（目前仅支持simple），simple策略使用Json.parse进行反序列化操作")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("string | any")]),t._v(" 序列化后的数据或者数据原值")])]),t._v(" "),s("h3",{attrs:{id:"clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[t._v("#")]),t._v(" clone")]),t._v(" "),s("p",[t._v("说明：拷贝")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val：Object | Array | Map")]),t._v(" 要拷贝的数据")]),t._v(" "),s("li",[s("code",[t._v("deep：boolean")]),t._v(" 是否深拷贝，可选，默认false")]),t._v(" "),s("li",[s("code",[t._v("strategy：string")]),t._v(" 拷贝策略，可选，默认simple（深拷贝时simple模式使用JSON.parse(JSON.stringify())互转，会丢失精度，非simple模式会使用深层递归方式进行深拷贝）,deep为true时生效")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Object | Array | Map")]),t._v(" 拷贝后的数据")])]),t._v(" "),s("h3",{attrs:{id:"cloneshallow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cloneshallow"}},[t._v("#")]),t._v(" cloneShallow")]),t._v(" "),s("p",[t._v("说明：浅拷贝")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val：Object | Array | Map")]),t._v(" 要拷贝的数据")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Object | Array | Map")]),t._v(" 拷贝后的数组，对象，或数据原值")])]),t._v(" "),s("h3",{attrs:{id:"clonedeep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clonedeep"}},[t._v("#")]),t._v(" cloneDeep")]),t._v(" "),s("p",[t._v("说明：深拷贝")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val：Object | Array | Map")]),t._v(" 要拷贝的数据")]),t._v(" "),s("li",[s("code",[t._v("strategy：string")]),t._v(" 拷贝策略，可选，默认simple，使用JSON.parse(JSON.stringify())得到，会丢失精度，非simple模式会使用深层递归方式进行深拷贝")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Object | Array | Map")]),t._v(" 深拷贝的值")])]),t._v(" "),s("h3",{attrs:{id:"unrepeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unrepeat"}},[t._v("#")]),t._v(" unRepeat")]),t._v(" "),s("p",[t._v("说明：去重")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("val：Array")]),t._v(" 原数组")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Array")]),t._v(" 去重数组")])]),t._v(" "),s("h3",{attrs:{id:"treetolist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treetolist"}},[t._v("#")]),t._v(" treeToList")]),t._v(" "),s("p",[t._v("说明：树形结构转一维数组")]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("tree：Object")]),t._v(" 树形结构")]),t._v(" "),s("li",[s("code",[t._v("childKey：string")]),t._v(" 子节点key名，默认children")])])]),t._v(" "),s("li",[t._v("返回："),s("code",[t._v("Array")]),t._v(" 扁平化数组")])]),t._v(" "),s("h3",{attrs:{id:"deletes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deletes"}},[t._v("#")]),t._v(" deletes")]),t._v(" "),s("p",[t._v("说明：删除对象中指定元素")]),t._v(" "),s("p",[s("code",[t._v("版本：0.0.7")])]),t._v(" "),s("ul",[s("li",[t._v("参数\n"),s("ul",[s("li",[s("code",[t._v("obj：Object | Array")]),t._v(" 要操作的对象或数组")]),t._v(" "),s("li",[s("code",[t._v("key：string | Array<string>")]),t._v(" 要删除的key")])])])]),t._v(" "),s("p",[t._v("提示：此方法在内部执行delete语句，会修改原始对象")])])}),[],!1,null,null,null);s.default=v.exports}}]);