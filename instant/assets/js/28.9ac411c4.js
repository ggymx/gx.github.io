(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{309:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),a("h2",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),a("p",[t._v("优化模块，包含常见的优化操作，导出模块名为"),a("code",[t._v("optimize")])]),t._v(" "),a("ul",[a("li",[t._v("导入模块")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" optimize "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gx-instant'")]),t._v("\n")])])]),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("h3",{attrs:{id:"debounce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debounce"}},[t._v("#")]),t._v(" debounce")]),t._v(" "),a("p",[t._v("说明：防抖")]),t._v(" "),a("ul",[a("li",[t._v("参数\n"),a("ul",[a("li",[a("code",[t._v("func：Function")]),t._v(" 需要防抖的函数")]),t._v(" "),a("li",[a("code",[t._v("delay：number")]),t._v(" 延迟时间")])])]),t._v(" "),a("li",[t._v("返回："),a("code",[t._v("Function")]),t._v(" 防抖后的函数")])]),t._v(" "),a("h3",{attrs:{id:"throttle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#throttle"}},[t._v("#")]),t._v(" throttle")]),t._v(" "),a("p",[t._v("说明：节流")]),t._v(" "),a("ul",[a("li",[t._v("参数\n"),a("ul",[a("li",[a("code",[t._v("func：Function")]),t._v(" 需要节流的函数")]),t._v(" "),a("li",[a("code",[t._v("delay：number")]),t._v(" 延迟时间")])])]),t._v(" "),a("li",[t._v("返回："),a("code",[t._v("Function")]),t._v(" 节流后的函数")])]),t._v(" "),a("h3",{attrs:{id:"computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" computed")]),t._v(" "),a("p",[t._v("说明：计算缓存")]),t._v(" "),a("p",[a("code",[t._v("版本：0.0.7")])]),t._v(" "),a("ul",[a("li",[t._v("参数\n"),a("ul",[a("li",[a("code",[t._v("cacheCount：number")]),t._v(" 可以缓存的结果个数，可选，默认为1")])])]),t._v(" "),a("li",[t._v("返回："),a("code",[t._v("Function")]),t._v(" 返回一个方法，接受函数以及该函数的参数，形参："),a("code",[t._v("func：Function，args:...rest")]),t._v(",其中此函数应是纯函数")])]),t._v(" "),a("p",[t._v("示例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定可以缓存的结果个数为2个，返回一个方法")]),t._v("\n  handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用add方法，参数1,2，add计算结果为3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再次匹配add方法，参数1,2，不再调用add方法，而是直接返回结果3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("提示")]),t._v(" "),a("ul",[a("li",[t._v("计算缓存常常需要方法执行复杂或耗时较长，并且参数不变的情况，可以取出之前计算的结果，避免重复计算")]),t._v(" "),a("li",[t._v("根据函数以及函数参数来缓存计算结果，如果曾经计算过，则直接返回结果，否则调用函数计算")]),t._v(" "),a("li",[t._v("因参数和方法和结果具有一一对应关系，因此传入方法应为纯函数")])]),t._v(" "),a("h3",{attrs:{id:"curry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curry"}},[t._v("#")]),t._v(" curry")]),t._v(" "),a("p",[t._v("说明：函数柯里化")]),t._v(" "),a("p",[a("code",[t._v("版本：0.0.7")])]),t._v(" "),a("ul",[a("li",[t._v("参数\n"),a("ul",[a("li",[a("code",[t._v("func：Function")]),t._v(" 要柯里化的方法")]),t._v(" "),a("li",[a("code",[t._v("args：...rest")]),t._v(" 提前确认的参数，和原函数一致")])])]),t._v(" "),a("li",[t._v("返回："),a("code",[t._v("Function")]),t._v(" 柯里化方法，接受剩余参数，参数形式和原函数一致，形参："),a("code",[t._v("args2：...rest")])])]),t._v(" "),a("p",[t._v("示例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用add方法，2是提前确认的参数，然后传入3，相当于对add(2,3)进行计算缓存")]),t._v("\n  handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[t._v("提示")]),t._v(" "),a("ul",[a("li",[t._v("柯里化方法常用于提前确认和复用方法参数，或使方法懒加载")])])])}),[],!1,null,null,null);a.default=e.exports}}]);